//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Hylasoft.OrdersGui.TransactionalFunctions {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
    public partial class UserException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExceptionMessageField;
        
        private string UserMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMessage {
            get {
                return this.UserMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMessageField, value) != true)) {
                    this.UserMessageField = value;
                    this.RaisePropertyChanged("UserMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadOrderDetailsCompartments", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
    public partial class LoadOrderDetailsCompartments : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double APIGravityField;
        
        private double ActualQtyField;
        
        private string BatchNumberField;
        
        private int CapacityField;
        
        private int CompartmentNoField;
        
        private int CompartmentStatusField;
        
        private long ContainerIdField;
        
        private string ContainerNoField;
        
        private int LoadArmIdField;
        
        private string LoadArmNameField;
        
        private int LoadArmNoField;
        
        private int LoadRackIdField;
        
        private string LoadRackNameField;
        
        private string LoadRackStatusField;
        
        private string MaterialCodeField;
        
        private string MaterialNameField;
        
        private double NetWeightField;
        
        private long OrderIdField;
        
        private string OrderNoField;
        
        private int SeqNoField;
        
        private string SourceTankField;
        
        private int TankAvailabilityStatusField;
        
        private int TankIdField;
        
        private string TankMaterialCodeField;
        
        private int TankMaterialIdField;
        
        private string TankNameField;
        
        private double TargetQtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double APIGravity {
            get {
                return this.APIGravityField;
            }
            set {
                if ((this.APIGravityField.Equals(value) != true)) {
                    this.APIGravityField = value;
                    this.RaisePropertyChanged("APIGravity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ActualQty {
            get {
                return this.ActualQtyField;
            }
            set {
                if ((this.ActualQtyField.Equals(value) != true)) {
                    this.ActualQtyField = value;
                    this.RaisePropertyChanged("ActualQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNumberField, value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompartmentNo {
            get {
                return this.CompartmentNoField;
            }
            set {
                if ((this.CompartmentNoField.Equals(value) != true)) {
                    this.CompartmentNoField = value;
                    this.RaisePropertyChanged("CompartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompartmentStatus {
            get {
                return this.CompartmentStatusField;
            }
            set {
                if ((this.CompartmentStatusField.Equals(value) != true)) {
                    this.CompartmentStatusField = value;
                    this.RaisePropertyChanged("CompartmentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContainerId {
            get {
                return this.ContainerIdField;
            }
            set {
                if ((this.ContainerIdField.Equals(value) != true)) {
                    this.ContainerIdField = value;
                    this.RaisePropertyChanged("ContainerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerNo {
            get {
                return this.ContainerNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerNoField, value) != true)) {
                    this.ContainerNoField = value;
                    this.RaisePropertyChanged("ContainerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadArmId {
            get {
                return this.LoadArmIdField;
            }
            set {
                if ((this.LoadArmIdField.Equals(value) != true)) {
                    this.LoadArmIdField = value;
                    this.RaisePropertyChanged("LoadArmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadArmName {
            get {
                return this.LoadArmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadArmNameField, value) != true)) {
                    this.LoadArmNameField = value;
                    this.RaisePropertyChanged("LoadArmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadArmNo {
            get {
                return this.LoadArmNoField;
            }
            set {
                if ((this.LoadArmNoField.Equals(value) != true)) {
                    this.LoadArmNoField = value;
                    this.RaisePropertyChanged("LoadArmNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadRackId {
            get {
                return this.LoadRackIdField;
            }
            set {
                if ((this.LoadRackIdField.Equals(value) != true)) {
                    this.LoadRackIdField = value;
                    this.RaisePropertyChanged("LoadRackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadRackName {
            get {
                return this.LoadRackNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadRackNameField, value) != true)) {
                    this.LoadRackNameField = value;
                    this.RaisePropertyChanged("LoadRackName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadRackStatus {
            get {
                return this.LoadRackStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadRackStatusField, value) != true)) {
                    this.LoadRackStatusField = value;
                    this.RaisePropertyChanged("LoadRackStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialCode {
            get {
                return this.MaterialCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialCodeField, value) != true)) {
                    this.MaterialCodeField = value;
                    this.RaisePropertyChanged("MaterialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NetWeight {
            get {
                return this.NetWeightField;
            }
            set {
                if ((this.NetWeightField.Equals(value) != true)) {
                    this.NetWeightField = value;
                    this.RaisePropertyChanged("NetWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNoField, value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNo {
            get {
                return this.SeqNoField;
            }
            set {
                if ((this.SeqNoField.Equals(value) != true)) {
                    this.SeqNoField = value;
                    this.RaisePropertyChanged("SeqNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceTank {
            get {
                return this.SourceTankField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceTankField, value) != true)) {
                    this.SourceTankField = value;
                    this.RaisePropertyChanged("SourceTank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankAvailabilityStatus {
            get {
                return this.TankAvailabilityStatusField;
            }
            set {
                if ((this.TankAvailabilityStatusField.Equals(value) != true)) {
                    this.TankAvailabilityStatusField = value;
                    this.RaisePropertyChanged("TankAvailabilityStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankId {
            get {
                return this.TankIdField;
            }
            set {
                if ((this.TankIdField.Equals(value) != true)) {
                    this.TankIdField = value;
                    this.RaisePropertyChanged("TankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankMaterialCode {
            get {
                return this.TankMaterialCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TankMaterialCodeField, value) != true)) {
                    this.TankMaterialCodeField = value;
                    this.RaisePropertyChanged("TankMaterialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TankMaterialId {
            get {
                return this.TankMaterialIdField;
            }
            set {
                if ((this.TankMaterialIdField.Equals(value) != true)) {
                    this.TankMaterialIdField = value;
                    this.RaisePropertyChanged("TankMaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TankName {
            get {
                return this.TankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TankNameField, value) != true)) {
                    this.TankNameField = value;
                    this.RaisePropertyChanged("TankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TargetQty {
            get {
                return this.TargetQtyField;
            }
            set {
                if ((this.TargetQtyField.Equals(value) != true)) {
                    this.TargetQtyField = value;
                    this.RaisePropertyChanged("TargetQty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SAPLoadOrderCompartmentSeal", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
    public partial class SAPLoadOrderCompartmentSeal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CompartmentNoField;
        
        private long ContainerIdField;
        
        private string MaterialCodeField;
        
        private string MaterialNameField;
        
        private long OrderIdField;
        
        private string SealNoField;
        
        private string SealNoEightField;
        
        private string SealNoEllevenField;
        
        private string SealNoFiveField;
        
        private string SealNoFourField;
        
        private string SealNoNineField;
        
        private string SealNoOneField;
        
        private string SealNoSevenField;
        
        private string SealNoSixField;
        
        private string SealNoTenField;
        
        private string SealNoThreeField;
        
        private string SealNoTwelveField;
        
        private string SealNoTwoField;
        
        private int SeqNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompartmentNo {
            get {
                return this.CompartmentNoField;
            }
            set {
                if ((this.CompartmentNoField.Equals(value) != true)) {
                    this.CompartmentNoField = value;
                    this.RaisePropertyChanged("CompartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContainerId {
            get {
                return this.ContainerIdField;
            }
            set {
                if ((this.ContainerIdField.Equals(value) != true)) {
                    this.ContainerIdField = value;
                    this.RaisePropertyChanged("ContainerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialCode {
            get {
                return this.MaterialCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialCodeField, value) != true)) {
                    this.MaterialCodeField = value;
                    this.RaisePropertyChanged("MaterialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNo {
            get {
                return this.SealNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoField, value) != true)) {
                    this.SealNoField = value;
                    this.RaisePropertyChanged("SealNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoEight {
            get {
                return this.SealNoEightField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoEightField, value) != true)) {
                    this.SealNoEightField = value;
                    this.RaisePropertyChanged("SealNoEight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoElleven {
            get {
                return this.SealNoEllevenField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoEllevenField, value) != true)) {
                    this.SealNoEllevenField = value;
                    this.RaisePropertyChanged("SealNoElleven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoFive {
            get {
                return this.SealNoFiveField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoFiveField, value) != true)) {
                    this.SealNoFiveField = value;
                    this.RaisePropertyChanged("SealNoFive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoFour {
            get {
                return this.SealNoFourField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoFourField, value) != true)) {
                    this.SealNoFourField = value;
                    this.RaisePropertyChanged("SealNoFour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoNine {
            get {
                return this.SealNoNineField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoNineField, value) != true)) {
                    this.SealNoNineField = value;
                    this.RaisePropertyChanged("SealNoNine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoOne {
            get {
                return this.SealNoOneField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoOneField, value) != true)) {
                    this.SealNoOneField = value;
                    this.RaisePropertyChanged("SealNoOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoSeven {
            get {
                return this.SealNoSevenField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoSevenField, value) != true)) {
                    this.SealNoSevenField = value;
                    this.RaisePropertyChanged("SealNoSeven");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoSix {
            get {
                return this.SealNoSixField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoSixField, value) != true)) {
                    this.SealNoSixField = value;
                    this.RaisePropertyChanged("SealNoSix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoTen {
            get {
                return this.SealNoTenField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoTenField, value) != true)) {
                    this.SealNoTenField = value;
                    this.RaisePropertyChanged("SealNoTen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoThree {
            get {
                return this.SealNoThreeField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoThreeField, value) != true)) {
                    this.SealNoThreeField = value;
                    this.RaisePropertyChanged("SealNoThree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoTwelve {
            get {
                return this.SealNoTwelveField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoTwelveField, value) != true)) {
                    this.SealNoTwelveField = value;
                    this.RaisePropertyChanged("SealNoTwelve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNoTwo {
            get {
                return this.SealNoTwoField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNoTwoField, value) != true)) {
                    this.SealNoTwoField = value;
                    this.RaisePropertyChanged("SealNoTwo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNo {
            get {
                return this.SeqNoField;
            }
            set {
                if ((this.SeqNoField.Equals(value) != true)) {
                    this.SeqNoField = value;
                    this.RaisePropertyChanged("SeqNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionalFunctions.ITransactionalFunctions")]
    public interface ITransactionalFunctions {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/AssignTruckToLoadOrderProducts", ReplyAction="http://tempuri.org/ITransactionalFunctions/AssignTruckToLoadOrderProductsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/AssignTruckToLoadOrderProductsUserExce" +
            "ptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginAssignTruckToLoadOrderProducts(long loadOrderId, long containerId, string TruckNo, System.AsyncCallback callback, object asyncState);
        
        void EndAssignTruckToLoadOrderProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/PrintAssignTruckToLoadOrderProducts", ReplyAction="http://tempuri.org/ITransactionalFunctions/PrintAssignTruckToLoadOrderProductsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/PrintAssignTruckToLoadOrderProductsUse" +
            "rExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginPrintAssignTruckToLoadOrderProducts(long loadOrderId, System.AsyncCallback callback, object asyncState);
        
        void EndPrintAssignTruckToLoadOrderProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/AssignTruckCompartmentsLoadOrderProduc" +
            "ts", ReplyAction="http://tempuri.org/ITransactionalFunctions/AssignTruckCompartmentsLoadOrderProduc" +
            "tsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/AssignTruckCompartmentsLoadOrderProduc" +
            "tsUserExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginAssignTruckCompartmentsLoadOrderProducts(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, System.AsyncCallback callback, object asyncState);
        
        void EndAssignTruckCompartmentsLoadOrderProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/CreateLoadOrderCompartmentAndProductRe" +
            "lationships", ReplyAction="http://tempuri.org/ITransactionalFunctions/CreateLoadOrderCompartmentAndProductRe" +
            "lationshipsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/CreateLoadOrderCompartmentAndProductRe" +
            "lationshipsUserExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginCreateLoadOrderCompartmentAndProductRelationships(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, System.AsyncCallback callback, object asyncState);
        
        void EndCreateLoadOrderCompartmentAndProductRelationships(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/InsertLoadOrderCompartmentSeals", ReplyAction="http://tempuri.org/ITransactionalFunctions/InsertLoadOrderCompartmentSealsRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/InsertLoadOrderCompartmentSealsUserExc" +
            "eptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginInsertLoadOrderCompartmentSeals(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal> SAPLoadOrderCompartmentSeals, System.AsyncCallback callback, object asyncState);
        
        void EndInsertLoadOrderCompartmentSeals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/PrintInsertLoadOrderCompartmentSeals", ReplyAction="http://tempuri.org/ITransactionalFunctions/PrintInsertLoadOrderCompartmentSealsRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/PrintInsertLoadOrderCompartmentSealsUs" +
            "erExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginPrintInsertLoadOrderCompartmentSeals(long orderId, System.AsyncCallback callback, object asyncState);
        
        void EndPrintInsertLoadOrderCompartmentSeals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/UpdateRackId", ReplyAction="http://tempuri.org/ITransactionalFunctions/UpdateRackIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/UpdateRackIdUserExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginUpdateRackId(int rackId, long orderId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateRackId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/UpdateScheduleDate", ReplyAction="http://tempuri.org/ITransactionalFunctions/UpdateScheduleDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/UpdateScheduleDateUserExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginUpdateScheduleDate(long orderId, System.DateTime ScheduleDateTime, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateScheduleDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/ChangeLoadOrderStatus", ReplyAction="http://tempuri.org/ITransactionalFunctions/ChangeLoadOrderStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/ChangeLoadOrderStatusUserExceptionFaul" +
            "t", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginChangeLoadOrderStatus(long orderId, int orderStatus, System.AsyncCallback callback, object asyncState);
        
        void EndChangeLoadOrderStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/startLoad", ReplyAction="http://tempuri.org/ITransactionalFunctions/startLoadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/startLoadUserExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginstartLoad(long compartmentId, System.AsyncCallback callback, object asyncState);
        
        string EndstartLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/ExecuteUnloadBookUpdateSP", ReplyAction="http://tempuri.org/ITransactionalFunctions/ExecuteUnloadBookUpdateSPResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/ExecuteUnloadBookUpdateSPUserException" +
            "Fault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginExecuteUnloadBookUpdateSP(long OrderId, System.AsyncCallback callback, object asyncState);
        
        bool EndExecuteUnloadBookUpdateSP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITransactionalFunctions/UpdateTankBatchNumberFromCompartments", ReplyAction="http://tempuri.org/ITransactionalFunctions/UpdateTankBatchNumberFromCompartmentsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hylasoft.OrdersGui.TransactionalFunctions.UserException), Action="http://tempuri.org/ITransactionalFunctions/UpdateTankBatchNumberFromCompartmentsU" +
            "serExceptionFault", Name="UserException", Namespace="http://schemas.datacontract.org/2004/07/EventMonitorService")]
        System.IAsyncResult BeginUpdateTankBatchNumberFromCompartments(long OrderId, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateTankBatchNumberFromCompartments(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionalFunctionsChannel : Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class startLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public startLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteUnloadBookUpdateSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteUnloadBookUpdateSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateTankBatchNumberFromCompartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTankBatchNumberFromCompartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionalFunctionsClient : System.ServiceModel.ClientBase<Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions>, Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions {
        
        private BeginOperationDelegate onBeginAssignTruckToLoadOrderProductsDelegate;
        
        private EndOperationDelegate onEndAssignTruckToLoadOrderProductsDelegate;
        
        private System.Threading.SendOrPostCallback onAssignTruckToLoadOrderProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintAssignTruckToLoadOrderProductsDelegate;
        
        private EndOperationDelegate onEndPrintAssignTruckToLoadOrderProductsDelegate;
        
        private System.Threading.SendOrPostCallback onPrintAssignTruckToLoadOrderProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAssignTruckCompartmentsLoadOrderProductsDelegate;
        
        private EndOperationDelegate onEndAssignTruckCompartmentsLoadOrderProductsDelegate;
        
        private System.Threading.SendOrPostCallback onAssignTruckCompartmentsLoadOrderProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateLoadOrderCompartmentAndProductRelationshipsDelegate;
        
        private EndOperationDelegate onEndCreateLoadOrderCompartmentAndProductRelationshipsDelegate;
        
        private System.Threading.SendOrPostCallback onCreateLoadOrderCompartmentAndProductRelationshipsCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLoadOrderCompartmentSealsDelegate;
        
        private EndOperationDelegate onEndInsertLoadOrderCompartmentSealsDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLoadOrderCompartmentSealsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintInsertLoadOrderCompartmentSealsDelegate;
        
        private EndOperationDelegate onEndPrintInsertLoadOrderCompartmentSealsDelegate;
        
        private System.Threading.SendOrPostCallback onPrintInsertLoadOrderCompartmentSealsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRackIdDelegate;
        
        private EndOperationDelegate onEndUpdateRackIdDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRackIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateScheduleDateDelegate;
        
        private EndOperationDelegate onEndUpdateScheduleDateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateScheduleDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeLoadOrderStatusDelegate;
        
        private EndOperationDelegate onEndChangeLoadOrderStatusDelegate;
        
        private System.Threading.SendOrPostCallback onChangeLoadOrderStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginstartLoadDelegate;
        
        private EndOperationDelegate onEndstartLoadDelegate;
        
        private System.Threading.SendOrPostCallback onstartLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteUnloadBookUpdateSPDelegate;
        
        private EndOperationDelegate onEndExecuteUnloadBookUpdateSPDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteUnloadBookUpdateSPCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTankBatchNumberFromCompartmentsDelegate;
        
        private EndOperationDelegate onEndUpdateTankBatchNumberFromCompartmentsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTankBatchNumberFromCompartmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TransactionalFunctionsClient() {
        }
        
        public TransactionalFunctionsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionalFunctionsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionalFunctionsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionalFunctionsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AssignTruckToLoadOrderProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintAssignTruckToLoadOrderProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AssignTruckCompartmentsLoadOrderProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateLoadOrderCompartmentAndProductRelationshipsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertLoadOrderCompartmentSealsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PrintInsertLoadOrderCompartmentSealsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateRackIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateScheduleDateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeLoadOrderStatusCompleted;
        
        public event System.EventHandler<startLoadCompletedEventArgs> startLoadCompleted;
        
        public event System.EventHandler<ExecuteUnloadBookUpdateSPCompletedEventArgs> ExecuteUnloadBookUpdateSPCompleted;
        
        public event System.EventHandler<UpdateTankBatchNumberFromCompartmentsCompletedEventArgs> UpdateTankBatchNumberFromCompartmentsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginAssignTruckToLoadOrderProducts(long loadOrderId, long containerId, string TruckNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssignTruckToLoadOrderProducts(loadOrderId, containerId, TruckNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndAssignTruckToLoadOrderProducts(System.IAsyncResult result) {
            base.Channel.EndAssignTruckToLoadOrderProducts(result);
        }
        
        private System.IAsyncResult OnBeginAssignTruckToLoadOrderProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long loadOrderId = ((long)(inValues[0]));
            long containerId = ((long)(inValues[1]));
            string TruckNo = ((string)(inValues[2]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginAssignTruckToLoadOrderProducts(loadOrderId, containerId, TruckNo, callback, asyncState);
        }
        
        private object[] OnEndAssignTruckToLoadOrderProducts(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndAssignTruckToLoadOrderProducts(result);
            return null;
        }
        
        private void OnAssignTruckToLoadOrderProductsCompleted(object state) {
            if ((this.AssignTruckToLoadOrderProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssignTruckToLoadOrderProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssignTruckToLoadOrderProductsAsync(long loadOrderId, long containerId, string TruckNo) {
            this.AssignTruckToLoadOrderProductsAsync(loadOrderId, containerId, TruckNo, null);
        }
        
        public void AssignTruckToLoadOrderProductsAsync(long loadOrderId, long containerId, string TruckNo, object userState) {
            if ((this.onBeginAssignTruckToLoadOrderProductsDelegate == null)) {
                this.onBeginAssignTruckToLoadOrderProductsDelegate = new BeginOperationDelegate(this.OnBeginAssignTruckToLoadOrderProducts);
            }
            if ((this.onEndAssignTruckToLoadOrderProductsDelegate == null)) {
                this.onEndAssignTruckToLoadOrderProductsDelegate = new EndOperationDelegate(this.OnEndAssignTruckToLoadOrderProducts);
            }
            if ((this.onAssignTruckToLoadOrderProductsCompletedDelegate == null)) {
                this.onAssignTruckToLoadOrderProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssignTruckToLoadOrderProductsCompleted);
            }
            base.InvokeAsync(this.onBeginAssignTruckToLoadOrderProductsDelegate, new object[] {
                        loadOrderId,
                        containerId,
                        TruckNo}, this.onEndAssignTruckToLoadOrderProductsDelegate, this.onAssignTruckToLoadOrderProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginPrintAssignTruckToLoadOrderProducts(long loadOrderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintAssignTruckToLoadOrderProducts(loadOrderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndPrintAssignTruckToLoadOrderProducts(System.IAsyncResult result) {
            base.Channel.EndPrintAssignTruckToLoadOrderProducts(result);
        }
        
        private System.IAsyncResult OnBeginPrintAssignTruckToLoadOrderProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long loadOrderId = ((long)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginPrintAssignTruckToLoadOrderProducts(loadOrderId, callback, asyncState);
        }
        
        private object[] OnEndPrintAssignTruckToLoadOrderProducts(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndPrintAssignTruckToLoadOrderProducts(result);
            return null;
        }
        
        private void OnPrintAssignTruckToLoadOrderProductsCompleted(object state) {
            if ((this.PrintAssignTruckToLoadOrderProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintAssignTruckToLoadOrderProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintAssignTruckToLoadOrderProductsAsync(long loadOrderId) {
            this.PrintAssignTruckToLoadOrderProductsAsync(loadOrderId, null);
        }
        
        public void PrintAssignTruckToLoadOrderProductsAsync(long loadOrderId, object userState) {
            if ((this.onBeginPrintAssignTruckToLoadOrderProductsDelegate == null)) {
                this.onBeginPrintAssignTruckToLoadOrderProductsDelegate = new BeginOperationDelegate(this.OnBeginPrintAssignTruckToLoadOrderProducts);
            }
            if ((this.onEndPrintAssignTruckToLoadOrderProductsDelegate == null)) {
                this.onEndPrintAssignTruckToLoadOrderProductsDelegate = new EndOperationDelegate(this.OnEndPrintAssignTruckToLoadOrderProducts);
            }
            if ((this.onPrintAssignTruckToLoadOrderProductsCompletedDelegate == null)) {
                this.onPrintAssignTruckToLoadOrderProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintAssignTruckToLoadOrderProductsCompleted);
            }
            base.InvokeAsync(this.onBeginPrintAssignTruckToLoadOrderProductsDelegate, new object[] {
                        loadOrderId}, this.onEndPrintAssignTruckToLoadOrderProductsDelegate, this.onPrintAssignTruckToLoadOrderProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginAssignTruckCompartmentsLoadOrderProducts(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssignTruckCompartmentsLoadOrderProducts(loadOrderCompartments, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndAssignTruckCompartmentsLoadOrderProducts(System.IAsyncResult result) {
            base.Channel.EndAssignTruckCompartmentsLoadOrderProducts(result);
        }
        
        private System.IAsyncResult OnBeginAssignTruckCompartmentsLoadOrderProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments = ((System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments>)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginAssignTruckCompartmentsLoadOrderProducts(loadOrderCompartments, callback, asyncState);
        }
        
        private object[] OnEndAssignTruckCompartmentsLoadOrderProducts(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndAssignTruckCompartmentsLoadOrderProducts(result);
            return null;
        }
        
        private void OnAssignTruckCompartmentsLoadOrderProductsCompleted(object state) {
            if ((this.AssignTruckCompartmentsLoadOrderProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssignTruckCompartmentsLoadOrderProductsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssignTruckCompartmentsLoadOrderProductsAsync(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments) {
            this.AssignTruckCompartmentsLoadOrderProductsAsync(loadOrderCompartments, null);
        }
        
        public void AssignTruckCompartmentsLoadOrderProductsAsync(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, object userState) {
            if ((this.onBeginAssignTruckCompartmentsLoadOrderProductsDelegate == null)) {
                this.onBeginAssignTruckCompartmentsLoadOrderProductsDelegate = new BeginOperationDelegate(this.OnBeginAssignTruckCompartmentsLoadOrderProducts);
            }
            if ((this.onEndAssignTruckCompartmentsLoadOrderProductsDelegate == null)) {
                this.onEndAssignTruckCompartmentsLoadOrderProductsDelegate = new EndOperationDelegate(this.OnEndAssignTruckCompartmentsLoadOrderProducts);
            }
            if ((this.onAssignTruckCompartmentsLoadOrderProductsCompletedDelegate == null)) {
                this.onAssignTruckCompartmentsLoadOrderProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssignTruckCompartmentsLoadOrderProductsCompleted);
            }
            base.InvokeAsync(this.onBeginAssignTruckCompartmentsLoadOrderProductsDelegate, new object[] {
                        loadOrderCompartments}, this.onEndAssignTruckCompartmentsLoadOrderProductsDelegate, this.onAssignTruckCompartmentsLoadOrderProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginCreateLoadOrderCompartmentAndProductRelationships(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateLoadOrderCompartmentAndProductRelationships(loadOrderCompartments, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndCreateLoadOrderCompartmentAndProductRelationships(System.IAsyncResult result) {
            base.Channel.EndCreateLoadOrderCompartmentAndProductRelationships(result);
        }
        
        private System.IAsyncResult OnBeginCreateLoadOrderCompartmentAndProductRelationships(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments = ((System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments>)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginCreateLoadOrderCompartmentAndProductRelationships(loadOrderCompartments, callback, asyncState);
        }
        
        private object[] OnEndCreateLoadOrderCompartmentAndProductRelationships(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndCreateLoadOrderCompartmentAndProductRelationships(result);
            return null;
        }
        
        private void OnCreateLoadOrderCompartmentAndProductRelationshipsCompleted(object state) {
            if ((this.CreateLoadOrderCompartmentAndProductRelationshipsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateLoadOrderCompartmentAndProductRelationshipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateLoadOrderCompartmentAndProductRelationshipsAsync(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments) {
            this.CreateLoadOrderCompartmentAndProductRelationshipsAsync(loadOrderCompartments, null);
        }
        
        public void CreateLoadOrderCompartmentAndProductRelationshipsAsync(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, object userState) {
            if ((this.onBeginCreateLoadOrderCompartmentAndProductRelationshipsDelegate == null)) {
                this.onBeginCreateLoadOrderCompartmentAndProductRelationshipsDelegate = new BeginOperationDelegate(this.OnBeginCreateLoadOrderCompartmentAndProductRelationships);
            }
            if ((this.onEndCreateLoadOrderCompartmentAndProductRelationshipsDelegate == null)) {
                this.onEndCreateLoadOrderCompartmentAndProductRelationshipsDelegate = new EndOperationDelegate(this.OnEndCreateLoadOrderCompartmentAndProductRelationships);
            }
            if ((this.onCreateLoadOrderCompartmentAndProductRelationshipsCompletedDelegate == null)) {
                this.onCreateLoadOrderCompartmentAndProductRelationshipsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLoadOrderCompartmentAndProductRelationshipsCompleted);
            }
            base.InvokeAsync(this.onBeginCreateLoadOrderCompartmentAndProductRelationshipsDelegate, new object[] {
                        loadOrderCompartments}, this.onEndCreateLoadOrderCompartmentAndProductRelationshipsDelegate, this.onCreateLoadOrderCompartmentAndProductRelationshipsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginInsertLoadOrderCompartmentSeals(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal> SAPLoadOrderCompartmentSeals, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLoadOrderCompartmentSeals(SAPLoadOrderCompartmentSeals, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndInsertLoadOrderCompartmentSeals(System.IAsyncResult result) {
            base.Channel.EndInsertLoadOrderCompartmentSeals(result);
        }
        
        private System.IAsyncResult OnBeginInsertLoadOrderCompartmentSeals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal> SAPLoadOrderCompartmentSeals = ((System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal>)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginInsertLoadOrderCompartmentSeals(SAPLoadOrderCompartmentSeals, callback, asyncState);
        }
        
        private object[] OnEndInsertLoadOrderCompartmentSeals(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndInsertLoadOrderCompartmentSeals(result);
            return null;
        }
        
        private void OnInsertLoadOrderCompartmentSealsCompleted(object state) {
            if ((this.InsertLoadOrderCompartmentSealsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLoadOrderCompartmentSealsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLoadOrderCompartmentSealsAsync(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal> SAPLoadOrderCompartmentSeals) {
            this.InsertLoadOrderCompartmentSealsAsync(SAPLoadOrderCompartmentSeals, null);
        }
        
        public void InsertLoadOrderCompartmentSealsAsync(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal> SAPLoadOrderCompartmentSeals, object userState) {
            if ((this.onBeginInsertLoadOrderCompartmentSealsDelegate == null)) {
                this.onBeginInsertLoadOrderCompartmentSealsDelegate = new BeginOperationDelegate(this.OnBeginInsertLoadOrderCompartmentSeals);
            }
            if ((this.onEndInsertLoadOrderCompartmentSealsDelegate == null)) {
                this.onEndInsertLoadOrderCompartmentSealsDelegate = new EndOperationDelegate(this.OnEndInsertLoadOrderCompartmentSeals);
            }
            if ((this.onInsertLoadOrderCompartmentSealsCompletedDelegate == null)) {
                this.onInsertLoadOrderCompartmentSealsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLoadOrderCompartmentSealsCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLoadOrderCompartmentSealsDelegate, new object[] {
                        SAPLoadOrderCompartmentSeals}, this.onEndInsertLoadOrderCompartmentSealsDelegate, this.onInsertLoadOrderCompartmentSealsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginPrintInsertLoadOrderCompartmentSeals(long orderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintInsertLoadOrderCompartmentSeals(orderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndPrintInsertLoadOrderCompartmentSeals(System.IAsyncResult result) {
            base.Channel.EndPrintInsertLoadOrderCompartmentSeals(result);
        }
        
        private System.IAsyncResult OnBeginPrintInsertLoadOrderCompartmentSeals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long orderId = ((long)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginPrintInsertLoadOrderCompartmentSeals(orderId, callback, asyncState);
        }
        
        private object[] OnEndPrintInsertLoadOrderCompartmentSeals(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndPrintInsertLoadOrderCompartmentSeals(result);
            return null;
        }
        
        private void OnPrintInsertLoadOrderCompartmentSealsCompleted(object state) {
            if ((this.PrintInsertLoadOrderCompartmentSealsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintInsertLoadOrderCompartmentSealsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintInsertLoadOrderCompartmentSealsAsync(long orderId) {
            this.PrintInsertLoadOrderCompartmentSealsAsync(orderId, null);
        }
        
        public void PrintInsertLoadOrderCompartmentSealsAsync(long orderId, object userState) {
            if ((this.onBeginPrintInsertLoadOrderCompartmentSealsDelegate == null)) {
                this.onBeginPrintInsertLoadOrderCompartmentSealsDelegate = new BeginOperationDelegate(this.OnBeginPrintInsertLoadOrderCompartmentSeals);
            }
            if ((this.onEndPrintInsertLoadOrderCompartmentSealsDelegate == null)) {
                this.onEndPrintInsertLoadOrderCompartmentSealsDelegate = new EndOperationDelegate(this.OnEndPrintInsertLoadOrderCompartmentSeals);
            }
            if ((this.onPrintInsertLoadOrderCompartmentSealsCompletedDelegate == null)) {
                this.onPrintInsertLoadOrderCompartmentSealsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintInsertLoadOrderCompartmentSealsCompleted);
            }
            base.InvokeAsync(this.onBeginPrintInsertLoadOrderCompartmentSealsDelegate, new object[] {
                        orderId}, this.onEndPrintInsertLoadOrderCompartmentSealsDelegate, this.onPrintInsertLoadOrderCompartmentSealsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginUpdateRackId(int rackId, long orderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRackId(rackId, orderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndUpdateRackId(System.IAsyncResult result) {
            base.Channel.EndUpdateRackId(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRackId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int rackId = ((int)(inValues[0]));
            long orderId = ((long)(inValues[1]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginUpdateRackId(rackId, orderId, callback, asyncState);
        }
        
        private object[] OnEndUpdateRackId(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndUpdateRackId(result);
            return null;
        }
        
        private void OnUpdateRackIdCompleted(object state) {
            if ((this.UpdateRackIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRackIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRackIdAsync(int rackId, long orderId) {
            this.UpdateRackIdAsync(rackId, orderId, null);
        }
        
        public void UpdateRackIdAsync(int rackId, long orderId, object userState) {
            if ((this.onBeginUpdateRackIdDelegate == null)) {
                this.onBeginUpdateRackIdDelegate = new BeginOperationDelegate(this.OnBeginUpdateRackId);
            }
            if ((this.onEndUpdateRackIdDelegate == null)) {
                this.onEndUpdateRackIdDelegate = new EndOperationDelegate(this.OnEndUpdateRackId);
            }
            if ((this.onUpdateRackIdCompletedDelegate == null)) {
                this.onUpdateRackIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRackIdCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRackIdDelegate, new object[] {
                        rackId,
                        orderId}, this.onEndUpdateRackIdDelegate, this.onUpdateRackIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginUpdateScheduleDate(long orderId, System.DateTime ScheduleDateTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateScheduleDate(orderId, ScheduleDateTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndUpdateScheduleDate(System.IAsyncResult result) {
            base.Channel.EndUpdateScheduleDate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateScheduleDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long orderId = ((long)(inValues[0]));
            System.DateTime ScheduleDateTime = ((System.DateTime)(inValues[1]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginUpdateScheduleDate(orderId, ScheduleDateTime, callback, asyncState);
        }
        
        private object[] OnEndUpdateScheduleDate(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndUpdateScheduleDate(result);
            return null;
        }
        
        private void OnUpdateScheduleDateCompleted(object state) {
            if ((this.UpdateScheduleDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateScheduleDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateScheduleDateAsync(long orderId, System.DateTime ScheduleDateTime) {
            this.UpdateScheduleDateAsync(orderId, ScheduleDateTime, null);
        }
        
        public void UpdateScheduleDateAsync(long orderId, System.DateTime ScheduleDateTime, object userState) {
            if ((this.onBeginUpdateScheduleDateDelegate == null)) {
                this.onBeginUpdateScheduleDateDelegate = new BeginOperationDelegate(this.OnBeginUpdateScheduleDate);
            }
            if ((this.onEndUpdateScheduleDateDelegate == null)) {
                this.onEndUpdateScheduleDateDelegate = new EndOperationDelegate(this.OnEndUpdateScheduleDate);
            }
            if ((this.onUpdateScheduleDateCompletedDelegate == null)) {
                this.onUpdateScheduleDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleDateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateScheduleDateDelegate, new object[] {
                        orderId,
                        ScheduleDateTime}, this.onEndUpdateScheduleDateDelegate, this.onUpdateScheduleDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginChangeLoadOrderStatus(long orderId, int orderStatus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeLoadOrderStatus(orderId, orderStatus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndChangeLoadOrderStatus(System.IAsyncResult result) {
            base.Channel.EndChangeLoadOrderStatus(result);
        }
        
        private System.IAsyncResult OnBeginChangeLoadOrderStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long orderId = ((long)(inValues[0]));
            int orderStatus = ((int)(inValues[1]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginChangeLoadOrderStatus(orderId, orderStatus, callback, asyncState);
        }
        
        private object[] OnEndChangeLoadOrderStatus(System.IAsyncResult result) {
            ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndChangeLoadOrderStatus(result);
            return null;
        }
        
        private void OnChangeLoadOrderStatusCompleted(object state) {
            if ((this.ChangeLoadOrderStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeLoadOrderStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeLoadOrderStatusAsync(long orderId, int orderStatus) {
            this.ChangeLoadOrderStatusAsync(orderId, orderStatus, null);
        }
        
        public void ChangeLoadOrderStatusAsync(long orderId, int orderStatus, object userState) {
            if ((this.onBeginChangeLoadOrderStatusDelegate == null)) {
                this.onBeginChangeLoadOrderStatusDelegate = new BeginOperationDelegate(this.OnBeginChangeLoadOrderStatus);
            }
            if ((this.onEndChangeLoadOrderStatusDelegate == null)) {
                this.onEndChangeLoadOrderStatusDelegate = new EndOperationDelegate(this.OnEndChangeLoadOrderStatus);
            }
            if ((this.onChangeLoadOrderStatusCompletedDelegate == null)) {
                this.onChangeLoadOrderStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeLoadOrderStatusCompleted);
            }
            base.InvokeAsync(this.onBeginChangeLoadOrderStatusDelegate, new object[] {
                        orderId,
                        orderStatus}, this.onEndChangeLoadOrderStatusDelegate, this.onChangeLoadOrderStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginstartLoad(long compartmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginstartLoad(compartmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndstartLoad(System.IAsyncResult result) {
            return base.Channel.EndstartLoad(result);
        }
        
        private System.IAsyncResult OnBeginstartLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long compartmentId = ((long)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginstartLoad(compartmentId, callback, asyncState);
        }
        
        private object[] OnEndstartLoad(System.IAsyncResult result) {
            string retVal = ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndstartLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnstartLoadCompleted(object state) {
            if ((this.startLoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.startLoadCompleted(this, new startLoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void startLoadAsync(long compartmentId) {
            this.startLoadAsync(compartmentId, null);
        }
        
        public void startLoadAsync(long compartmentId, object userState) {
            if ((this.onBeginstartLoadDelegate == null)) {
                this.onBeginstartLoadDelegate = new BeginOperationDelegate(this.OnBeginstartLoad);
            }
            if ((this.onEndstartLoadDelegate == null)) {
                this.onEndstartLoadDelegate = new EndOperationDelegate(this.OnEndstartLoad);
            }
            if ((this.onstartLoadCompletedDelegate == null)) {
                this.onstartLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnstartLoadCompleted);
            }
            base.InvokeAsync(this.onBeginstartLoadDelegate, new object[] {
                        compartmentId}, this.onEndstartLoadDelegate, this.onstartLoadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginExecuteUnloadBookUpdateSP(long OrderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteUnloadBookUpdateSP(OrderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndExecuteUnloadBookUpdateSP(System.IAsyncResult result) {
            return base.Channel.EndExecuteUnloadBookUpdateSP(result);
        }
        
        private System.IAsyncResult OnBeginExecuteUnloadBookUpdateSP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long OrderId = ((long)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginExecuteUnloadBookUpdateSP(OrderId, callback, asyncState);
        }
        
        private object[] OnEndExecuteUnloadBookUpdateSP(System.IAsyncResult result) {
            bool retVal = ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndExecuteUnloadBookUpdateSP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteUnloadBookUpdateSPCompleted(object state) {
            if ((this.ExecuteUnloadBookUpdateSPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteUnloadBookUpdateSPCompleted(this, new ExecuteUnloadBookUpdateSPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteUnloadBookUpdateSPAsync(long OrderId) {
            this.ExecuteUnloadBookUpdateSPAsync(OrderId, null);
        }
        
        public void ExecuteUnloadBookUpdateSPAsync(long OrderId, object userState) {
            if ((this.onBeginExecuteUnloadBookUpdateSPDelegate == null)) {
                this.onBeginExecuteUnloadBookUpdateSPDelegate = new BeginOperationDelegate(this.OnBeginExecuteUnloadBookUpdateSP);
            }
            if ((this.onEndExecuteUnloadBookUpdateSPDelegate == null)) {
                this.onEndExecuteUnloadBookUpdateSPDelegate = new EndOperationDelegate(this.OnEndExecuteUnloadBookUpdateSP);
            }
            if ((this.onExecuteUnloadBookUpdateSPCompletedDelegate == null)) {
                this.onExecuteUnloadBookUpdateSPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteUnloadBookUpdateSPCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteUnloadBookUpdateSPDelegate, new object[] {
                        OrderId}, this.onEndExecuteUnloadBookUpdateSPDelegate, this.onExecuteUnloadBookUpdateSPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.BeginUpdateTankBatchNumberFromCompartments(long OrderId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTankBatchNumberFromCompartments(OrderId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions.EndUpdateTankBatchNumberFromCompartments(System.IAsyncResult result) {
            return base.Channel.EndUpdateTankBatchNumberFromCompartments(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTankBatchNumberFromCompartments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long OrderId = ((long)(inValues[0]));
            return ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).BeginUpdateTankBatchNumberFromCompartments(OrderId, callback, asyncState);
        }
        
        private object[] OnEndUpdateTankBatchNumberFromCompartments(System.IAsyncResult result) {
            bool retVal = ((Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions)(this)).EndUpdateTankBatchNumberFromCompartments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateTankBatchNumberFromCompartmentsCompleted(object state) {
            if ((this.UpdateTankBatchNumberFromCompartmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTankBatchNumberFromCompartmentsCompleted(this, new UpdateTankBatchNumberFromCompartmentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTankBatchNumberFromCompartmentsAsync(long OrderId) {
            this.UpdateTankBatchNumberFromCompartmentsAsync(OrderId, null);
        }
        
        public void UpdateTankBatchNumberFromCompartmentsAsync(long OrderId, object userState) {
            if ((this.onBeginUpdateTankBatchNumberFromCompartmentsDelegate == null)) {
                this.onBeginUpdateTankBatchNumberFromCompartmentsDelegate = new BeginOperationDelegate(this.OnBeginUpdateTankBatchNumberFromCompartments);
            }
            if ((this.onEndUpdateTankBatchNumberFromCompartmentsDelegate == null)) {
                this.onEndUpdateTankBatchNumberFromCompartmentsDelegate = new EndOperationDelegate(this.OnEndUpdateTankBatchNumberFromCompartments);
            }
            if ((this.onUpdateTankBatchNumberFromCompartmentsCompletedDelegate == null)) {
                this.onUpdateTankBatchNumberFromCompartmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTankBatchNumberFromCompartmentsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTankBatchNumberFromCompartmentsDelegate, new object[] {
                        OrderId}, this.onEndUpdateTankBatchNumberFromCompartmentsDelegate, this.onUpdateTankBatchNumberFromCompartmentsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions CreateChannel() {
            return new TransactionalFunctionsClientChannel(this);
        }
        
        private class TransactionalFunctionsClientChannel : ChannelBase<Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions>, Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions {
            
            public TransactionalFunctionsClientChannel(System.ServiceModel.ClientBase<Hylasoft.OrdersGui.TransactionalFunctions.ITransactionalFunctions> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAssignTruckToLoadOrderProducts(long loadOrderId, long containerId, string TruckNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = loadOrderId;
                _args[1] = containerId;
                _args[2] = TruckNo;
                System.IAsyncResult _result = base.BeginInvoke("AssignTruckToLoadOrderProducts", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAssignTruckToLoadOrderProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AssignTruckToLoadOrderProducts", _args, result);
            }
            
            public System.IAsyncResult BeginPrintAssignTruckToLoadOrderProducts(long loadOrderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = loadOrderId;
                System.IAsyncResult _result = base.BeginInvoke("PrintAssignTruckToLoadOrderProducts", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPrintAssignTruckToLoadOrderProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PrintAssignTruckToLoadOrderProducts", _args, result);
            }
            
            public System.IAsyncResult BeginAssignTruckCompartmentsLoadOrderProducts(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = loadOrderCompartments;
                System.IAsyncResult _result = base.BeginInvoke("AssignTruckCompartmentsLoadOrderProducts", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAssignTruckCompartmentsLoadOrderProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AssignTruckCompartmentsLoadOrderProducts", _args, result);
            }
            
            public System.IAsyncResult BeginCreateLoadOrderCompartmentAndProductRelationships(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.LoadOrderDetailsCompartments> loadOrderCompartments, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = loadOrderCompartments;
                System.IAsyncResult _result = base.BeginInvoke("CreateLoadOrderCompartmentAndProductRelationships", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateLoadOrderCompartmentAndProductRelationships(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateLoadOrderCompartmentAndProductRelationships", _args, result);
            }
            
            public System.IAsyncResult BeginInsertLoadOrderCompartmentSeals(System.Collections.ObjectModel.ObservableCollection<Hylasoft.OrdersGui.TransactionalFunctions.SAPLoadOrderCompartmentSeal> SAPLoadOrderCompartmentSeals, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SAPLoadOrderCompartmentSeals;
                System.IAsyncResult _result = base.BeginInvoke("InsertLoadOrderCompartmentSeals", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertLoadOrderCompartmentSeals(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertLoadOrderCompartmentSeals", _args, result);
            }
            
            public System.IAsyncResult BeginPrintInsertLoadOrderCompartmentSeals(long orderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = orderId;
                System.IAsyncResult _result = base.BeginInvoke("PrintInsertLoadOrderCompartmentSeals", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPrintInsertLoadOrderCompartmentSeals(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PrintInsertLoadOrderCompartmentSeals", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateRackId(int rackId, long orderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = rackId;
                _args[1] = orderId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRackId", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateRackId(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateRackId", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateScheduleDate(long orderId, System.DateTime ScheduleDateTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = orderId;
                _args[1] = ScheduleDateTime;
                System.IAsyncResult _result = base.BeginInvoke("UpdateScheduleDate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateScheduleDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateScheduleDate", _args, result);
            }
            
            public System.IAsyncResult BeginChangeLoadOrderStatus(long orderId, int orderStatus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = orderId;
                _args[1] = orderStatus;
                System.IAsyncResult _result = base.BeginInvoke("ChangeLoadOrderStatus", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangeLoadOrderStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangeLoadOrderStatus", _args, result);
            }
            
            public System.IAsyncResult BeginstartLoad(long compartmentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = compartmentId;
                System.IAsyncResult _result = base.BeginInvoke("startLoad", _args, callback, asyncState);
                return _result;
            }
            
            public string EndstartLoad(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("startLoad", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecuteUnloadBookUpdateSP(long OrderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = OrderId;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteUnloadBookUpdateSP", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndExecuteUnloadBookUpdateSP(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ExecuteUnloadBookUpdateSP", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTankBatchNumberFromCompartments(long OrderId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = OrderId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTankBatchNumberFromCompartments", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateTankBatchNumberFromCompartments(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateTankBatchNumberFromCompartments", _args, result)));
                return _result;
            }
        }
    }
}
